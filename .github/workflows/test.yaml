name: "Test"

on:
  pull_request:
  push:
      branches:
        - "main"
        - "releases"

jobs:
  test:
    name: "Test"
    runs-on: "windows-latest"

    strategy:
      matrix:
        run:
          - cpythons:
              - "3.8"
              - "3.9"
              - "3.10"
              - "3.11"
              - "3.12"

    steps:
      - name: "Checkout branch"
        uses: "actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11" # v4.1.1

      - name: "Setup Pythons"
        id: "setup-python"
        uses: "actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c" # v5.0.0
        with:
          python-version: "${{ join(matrix.run.cpythons, '\n') }}"
          allow-prereleases: true
          # Cache packages that pip downloads.
          # This does not cache the installed files.
          cache: "pip"
          cache-dependency-path: |
            pyproject.toml
            tox.ini
            requirements/**/*.txt

      - name: "Detect Pythons"
        uses: "kurtmckee/detect-pythons@38187a5464f266e93e5c1467699f7be2bf521d2e" # v1.1.0

      - name: "Restore cache"
        id: "restore-cache"
        uses: "actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2" # v4.0.0
        with:
          path: |
            .mypy_cache/
            .tox/
            .venv/
          key: "test-os=${{ runner.os }}-hash=${{ hashFiles('.python-identifiers', 'pyproject.toml', 'tox.ini', 'requirements/**/*.txt') }}"

      - name: "Create a virtual environment"
        if: "steps.restore-cache.outputs.cache-hit == false"
        run: |
          python -m venv .venv
          .venv/Scripts/python -m pip install --upgrade pip setuptools wheel
          .venv/Scripts/pip install tox

      - name: "Test"
        run: |
          .venv/Scripts/tox run --colored yes -e py${{ join(matrix.run.cpythons, ',py') }},coverage-report-ci,mypy
